{"uid":"382f87d4271bb1c4","name":"test_github","fullName":"tests.test_steps#test_github","historyId":"93ae5aa7fd35cbf10e7d85b6b085b903","time":{"start":1658126683085,"stop":1658126683770,"duration":685},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55c574bd0b13 <unknown>\n#1 0x55c5749d7688 <unknown>\n#2 0x55c5749fbf1f <unknown>\n#3 0x55c5749f75aa <unknown>\n#4 0x55c574a3264a <unknown>\n#5 0x55c574a2c7a3 <unknown>\n#6 0x55c574a020ea <unknown>\n#7 0x55c574a03225 <unknown>\n#8 0x55c574c182dd <unknown>\n#9 0x55c574c1c2c7 <unknown>\n#10 0x55c574c0222e <unknown>\n#11 0x55c574c1d0a8 <unknown>\n#12 0x55c574bf6bc0 <unknown>\n#13 0x55c574c396c8 <unknown>\n#14 0x55c574c39848 <unknown>\n#15 0x55c574c53c0d <unknown>\n#16 0x7f0ef3ea4609 <unknown>","statusTrace":"def test_github():\n        with allure.step('Open main page'):\n>           browser.open(\"https://github.com/\")\n\ntests/test_steps.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/browser.py:78: in open\n    self.config.get_or_create_driver().get(url)\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:281: in get_or_create_driver\n    return self._source.get_or_create()\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:129: in get_or_create\n    return self.create()\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:110: in create\n    self._stored = self._set_driver()\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:192: in <lambda>\n    lambda: self._set_chrome_or_firefox_from_webdriver_manager()\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:259: in _set_chrome_or_firefox_from_webdriver_manager\n    return {'chrome': get_chrome, 'firefox': get_firefox}.get(\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:239: in get_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:70: in __init__\n    super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:92: in __init__\n    RemoteWebDriver.__init__(\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:275: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:365: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:430: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc6bbe34430>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#14 0x55c574c39848 \\\\u003Cunknown>\\\\n#15 0x55c574c53c0d \\\\u003Cunknown>\\\\n#16 0x7f0ef3ea4609 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55c574bd0b13 <unknown>\nE       #1 0x55c5749d7688 <unknown>\nE       #2 0x55c5749fbf1f <unknown>\nE       #3 0x55c5749f75aa <unknown>\nE       #4 0x55c574a3264a <unknown>\nE       #5 0x55c574a2c7a3 <unknown>\nE       #6 0x55c574a020ea <unknown>\nE       #7 0x55c574a03225 <unknown>\nE       #8 0x55c574c182dd <unknown>\nE       #9 0x55c574c1c2c7 <unknown>\nE       #10 0x55c574c0222e <unknown>\nE       #11 0x55c574c1d0a8 <unknown>\nE       #12 0x55c574bf6bc0 <unknown>\nE       #13 0x55c574c396c8 <unknown>\nE       #14 0x55c574c39848 <unknown>\nE       #15 0x55c574c53c0d <unknown>\nE       #16 0x7f0ef3ea4609 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:247: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55c574bd0b13 <unknown>\n#1 0x55c5749d7688 <unknown>\n#2 0x55c5749fbf1f <unknown>\n#3 0x55c5749f75aa <unknown>\n#4 0x55c574a3264a <unknown>\n#5 0x55c574a2c7a3 <unknown>\n#6 0x55c574a020ea <unknown>\n#7 0x55c574a03225 <unknown>\n#8 0x55c574c182dd <unknown>\n#9 0x55c574c1c2c7 <unknown>\n#10 0x55c574c0222e <unknown>\n#11 0x55c574c1d0a8 <unknown>\n#12 0x55c574bf6bc0 <unknown>\n#13 0x55c574c396c8 <unknown>\n#14 0x55c574c39848 <unknown>\n#15 0x55c574c53c0d <unknown>\n#16 0x7f0ef3ea4609 <unknown>","statusTrace":"def test_github():\n        with allure.step('Open main page'):\n>           browser.open(\"https://github.com/\")\n\ntests/test_steps.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/browser.py:78: in open\n    self.config.get_or_create_driver().get(url)\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:281: in get_or_create_driver\n    return self._source.get_or_create()\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:129: in get_or_create\n    return self.create()\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:110: in create\n    self._stored = self._set_driver()\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:192: in <lambda>\n    lambda: self._set_chrome_or_firefox_from_webdriver_manager()\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:259: in _set_chrome_or_firefox_from_webdriver_manager\n    return {'chrome': get_chrome, 'firefox': get_firefox}.get(\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py:239: in get_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:70: in __init__\n    super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:92: in __init__\n    RemoteWebDriver.__init__(\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:275: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:365: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:430: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc6bbe34430>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#14 0x55c574c39848 \\\\u003Cunknown>\\\\n#15 0x55c574c53c0d \\\\u003Cunknown>\\\\n#16 0x7f0ef3ea4609 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55c574bd0b13 <unknown>\nE       #1 0x55c5749d7688 <unknown>\nE       #2 0x55c5749fbf1f <unknown>\nE       #3 0x55c5749f75aa <unknown>\nE       #4 0x55c574a3264a <unknown>\nE       #5 0x55c574a2c7a3 <unknown>\nE       #6 0x55c574a020ea <unknown>\nE       #7 0x55c574a03225 <unknown>\nE       #8 0x55c574c182dd <unknown>\nE       #9 0x55c574c1c2c7 <unknown>\nE       #10 0x55c574c0222e <unknown>\nE       #11 0x55c574c1d0a8 <unknown>\nE       #12 0x55c574bf6bc0 <unknown>\nE       #13 0x55c574c396c8 <unknown>\nE       #14 0x55c574c39848 <unknown>\nE       #15 0x55c574c53c0d <unknown>\nE       #16 0x7f0ef3ea4609 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:247: WebDriverException","steps":[{"name":"Open main page","time":{"start":1658126683085,"stop":1658126683769,"duration":684},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55c574bd0b13 <unknown>\n#1 0x55c5749d7688 <unknown>\n#2 0x55c5749fbf1f <unknown>\n#3 0x55c5749f75aa <unknown>\n#4 0x55c574a3264a <unknown>\n#5 0x55c574a2c7a3 <unknown>\n#6 0x55c574a020ea <unknown>\n#7 0x55c574a03225 <unknown>\n#8 0x55c574c182dd <unknown>\n#9 0x55c574c1c2c7 <unknown>\n#10 0x55c574c0222e <unknown>\n#11 0x55c574c1d0a8 <unknown>\n#12 0x55c574bf6bc0 <unknown>\n#13 0x55c574c396c8 <unknown>\n#14 0x55c574c39848 <unknown>\n#15 0x55c574c53c0d <unknown>\n#16 0x7f0ef3ea4609 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Allure_Reports/Allure_Reports/tests/test_steps.py\", line 10, in test_github\n    browser.open(\"https://github.com/\")\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/browser.py\", line 78, in open\n    self.config.get_or_create_driver().get(url)\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py\", line 281, in get_or_create_driver\n    return self._source.get_or_create()\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py\", line 129, in get_or_create\n    return self.create()\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py\", line 110, in create\n    self._stored = self._set_driver()\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py\", line 192, in <lambda>\n    lambda: self._set_chrome_or_firefox_from_webdriver_manager()\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py\", line 259, in _set_chrome_or_firefox_from_webdriver_manager\n    return {'chrome': get_chrome, 'firefox': get_firefox}.get(\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selene/support/shared/config.py\", line 239, in get_chrome\n    return Chrome(\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py\", line 70, in __init__\n    super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py\", line 92, in __init__\n    RemoteWebDriver.__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 275, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 365, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 430, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.5/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"8d99054041d6b098","name":"log","source":"8d99054041d6b098.txt","type":"text/plain","size":338},{"uid":"e0dfab5e561ce0d3","name":"stdout","source":"e0dfab5e561ce0d3.txt","type":"text/plain","size":1},{"uid":"9822928e86212c3a","name":"stderr","source":"9822928e86212c3a.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":1,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_steps"},{"name":"host","value":"fv-az502-63"},{"name":"thread","value":"2278-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_steps"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"62823393554a0cd9","reportUrl":"https://Bodan1992.github.io/Allure_Reports/3//#testresult/62823393554a0cd9","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5616c17c2b13 <unknown>\n#1 0x5616c15c9688 <unknown>\n#2 0x5616c15edf1f <unknown>\n#3 0x5616c15e95aa <unknown>\n#4 0x5616c162464a <unknown>\n#5 0x5616c161e7a3 <unknown>\n#6 0x5616c15f40ea <unknown>\n#7 0x5616c15f5225 <unknown>\n#8 0x5616c180a2dd <unknown>\n#9 0x5616c180e2c7 <unknown>\n#10 0x5616c17f422e <unknown>\n#11 0x5616c180f0a8 <unknown>\n#12 0x5616c17e8bc0 <unknown>\n#13 0x5616c182b6c8 <unknown>\n#14 0x5616c182b848 <unknown>\n#15 0x5616c1845c0d <unknown>\n#16 0x7fbfd5fea609 <unknown>","time":{"start":1658126038840,"stop":1658126039577,"duration":737}},{"uid":"2a35cddf00b3888d","reportUrl":"https://Bodan1992.github.io/Allure_Reports/2//#testresult/2a35cddf00b3888d","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x564f7e3e6b13 <unknown>\n#1 0x564f7e1ed688 <unknown>\n#2 0x564f7e211f1f <unknown>\n#3 0x564f7e20d5aa <unknown>\n#4 0x564f7e24864a <unknown>\n#5 0x564f7e2427a3 <unknown>\n#6 0x564f7e2180ea <unknown>\n#7 0x564f7e219225 <unknown>\n#8 0x564f7e42e2dd <unknown>\n#9 0x564f7e4322c7 <unknown>\n#10 0x564f7e41822e <unknown>\n#11 0x564f7e4330a8 <unknown>\n#12 0x564f7e40cbc0 <unknown>\n#13 0x564f7e44f6c8 <unknown>\n#14 0x564f7e44f848 <unknown>\n#15 0x564f7e469c0d <unknown>\n#16 0x7eff9c696609 <unknown>","time":{"start":1658124894072,"stop":1658124894795,"duration":723}},{"uid":"18165529f148da3e","reportUrl":"https://Bodan1992.github.io/Allure_Reports/1//#testresult/18165529f148da3e","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55b4299a9b13 <unknown>\n#1 0x55b4297b0688 <unknown>\n#2 0x55b4297d4f1f <unknown>\n#3 0x55b4297d05aa <unknown>\n#4 0x55b42980b64a <unknown>\n#5 0x55b4298057a3 <unknown>\n#6 0x55b4297db0ea <unknown>\n#7 0x55b4297dc225 <unknown>\n#8 0x55b4299f12dd <unknown>\n#9 0x55b4299f52c7 <unknown>\n#10 0x55b4299db22e <unknown>\n#11 0x55b4299f60a8 <unknown>\n#12 0x55b4299cfbc0 <unknown>\n#13 0x55b429a126c8 <unknown>\n#14 0x55b429a12848 <unknown>\n#15 0x55b429a2cc0d <unknown>\n#16 0x7ff95a049609 <unknown>","time":{"start":1658124510291,"stop":1658124510964,"duration":673}}]},"tags":[]},"source":"382f87d4271bb1c4.json","parameterValues":[]}